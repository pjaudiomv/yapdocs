[{"title":"Excluding a custom format from a Yap query","type":0,"sectionRef":"#","url":"blog/excluding-format-post","content":"It’s possible to exclude a result from Yap results by using a custom format. For example say you made a Temporary Closure format that had an ID of 2069. You could set in your config.php a custom query, which would exclude those in the response.","keywords":""},{"title":"Merging Yap Servers","type":0,"sectionRef":"#","url":"blog/merging-yap-post","content":"Since Yap 3.0.0 (released in March 2019), it’s been possible to use a single Yap server with multiple Twilio accounts. What this means is that a service body can handle the overhead of server management while another service body retains the management of phone numbers and billing. Yap 3 also introduced the concept of configuration precedence https://github.com/bmlt-enabled/yap/wiki/Configuration-Precedence. This creates the ability to manifest all kinds of powerful capability without requiring access to the config.php on the server (critical for this situation where server management is handled by someone else). It also has the ability to set a value at regional level while the hierarchy of the BMLT automatically cascades down to the member areas. Recently I had to migrate my regional yap server to the zonal server. Below is the process I followed, feel free to send an email to help@bmlt.app if you’d like more details. Consider whether you may want to take a backup and overwrite your existing Yap database, or make a copy with a new install and config to do side by side testing. You may also want to consider setting in the database config ahead of time or afterward. You may also want to transfer any other settings in your top level config.php to the Config settings in the admin portal. Keep in mind that service bodies will use the hierarchy, so if you set this as a regional level all the service bodies connected will inherit them. 1) Delete any configuration from the target yap server, use the server body IDs that would be the IDs that would be the query below: DELETE FROM config where service_body_id in (x [,x]); Copy 2) Begin an export from your source yap server, select only data and exclude the flags table. See the screenshot below. (Use a self-contained file) 3) After the file has been exported run the below on your system. In the below example, “export.sql” is the file exported from Step 2 above. cat export.sql | sed -e “s/([0-9]*,/(NULL,/g” &gt; export-mod.sql Copy 4) Import export-mod.sql into the target yap server. “export-mod.sql” is the output from the command run locally in Step 3 above. 5) Your phone numbers must have explicit service body overrides in order to pull configuration values from the database (you can use either override_service_body_id or override_service_body_config_id). One changes your service body for call routing and the other selects configuration, respectively.","keywords":""},{"title":"Blocklist","type":0,"sectionRef":"#","url":"general/blocklist","content":"Blocklist If you want to completely block a specific number you can use the setting as follows (comma-separated). Sometimes it's best to look at the Caller querystring value in your logs or the Twilio console to see the exact number being passed. The number should be in E.164 format. static $blocklist = &quot;&quot;; Copy","keywords":""},{"title":"Configuration Precedence","type":0,"sectionRef":"#","url":"general/configuration-precedence","content":"Configuration Precedence It's possible to override most of the settings in several different ways. There is a sequence of precedence as follows. You can always validate the setting by going to the settings in the admin portal. 1) Querystring parameters that match the name. For example if you wanted to override the title for one page you'd do the following: index.php?title=something+here 2) Session overrides. This means the entire call will use this setting. index.php?override_title=something+here. Twilio will respect this setting for entire during of the call. 3) New Yap 3.0 Service body overrides from the Admin UI. These have a cascading hierarchy of precedence based off the service body above it in the hierarchy tree from your root server. Either the override_service_body_id (which will affect call routing) or override_service_body_config_id will pull these settings into the session for use. 4) Config.php. Any setting is controllable from within config.php. 5) Factory defaults. You can review them on your /admin/settings.php page. You can completely override any config.php file setting as well with additional precedence. 1) Create a new file called config_something.php. Add whichever settings you want to override. You do not need every setting, only those you want to override. 2) Use the last part after the underscore in your webhook as, for example: https://your-yap-server/index.php?override_config=something.","keywords":""},{"title":"Postal Code Lengths","type":0,"sectionRef":"#","url":"general/postal-code-lengths","content":"Postal Code Lengths By default a 5 digit postal code will be asked for. To override this set the following, for instance a 4 digit postal code: static $postal_code_length = 4; Copy","keywords":""},{"title":"Location Lookup Bias","type":0,"sectionRef":"#","url":"general/location-lookup-bias","content":"Location Lookup Bias By default location lookups are biased toward the US. You can create a series of refinements by using the $location_lookup_bias in config.php. For example say you wanted to lookup Bayonne. By default Bayonne, New Jersey would be interpreted. If you were intended for France you would set your config as the following: static $location_lookup_bias = &quot;country:France&quot;; Copy A full listing of available bias options are available here: https://developers.google.com/maps/documentation/geocoding/intro#ComponentFiltering. You can use as few or as many as you want, by separating each set with pipe &quot;|&quot; character.","keywords":""},{"title":"Language Options","type":0,"sectionRef":"#","url":"general/language-options","content":"","keywords":""},{"title":"Language Call Routing​","type":1,"pageTitle":"Language Options","url":"general/language-options#language-call-routing","content":"You can also create a language selection menu upon dialing in. It will only be available for those that there are resource files for in lang/ folder. If you have some translations, please send them, so they can be merged in. Add a new setting called, specifying the language codes for each language you want included. The order will indicate the order in which it will be played back: static $language_selections = &quot;en-US,pig-latin&quot;; Copy This example will make option 1, English and option 2, pig latin. "},{"title":"Mixing languages and voices​","type":1,"pageTitle":"Language Options","url":"general/language-options#mixing-languages-and-voices","content":"Voices can be configured for every language option. For example for Spanish: es_US_voice = &quot;Polly.Penelope&quot;; Copy New Yap 3.0 If you want to route calls to volunteers by language, see the section on Language in Specialized Routing. "},{"title":"Voice Greeting","type":0,"sectionRef":"#","url":"general/voice-greeting","content":"Voice Greeting It's possible to record a custom voice prompt and have it play back instead of the traditional voice engine. Set the following: *Keep in mind that this will override the main menu as well, so you should record the relevant prompts (i.e. press 1 to find someone to talk too... press 2 to find a meeting) static $en_US_greeting = &quot;https://example.com/your-recorded-greeting.mp3&quot; Copy You can also set a custom greeting for voicemail. static $en_US_voicemail_greeting = &quot;https://example.com/your-recorded-greeting.mp3&quot; Copy These settings are overridable from within each service body call handling.","keywords":""},{"title":"Tollfree Bias","type":0,"sectionRef":"#","url":"general/tollfree-bias","content":"Tollfree Bias Tollfree is independent of any state/province bias. To enable a specific bias, add static $toll_free_province_bias to your config.php, and set to the two letter state bias. Example $toll_free_province_bias = &quot;TX&quot;, will bias to Texas.","keywords":""},{"title":"stateprovince-lookup","type":0,"sectionRef":"#","url":"general/stateprovince-lookup","content":"","keywords":""},{"title":"State/Province Lookup​","type":1,"pageTitle":"stateprovince-lookup","url":"general/stateprovince-lookup#stateprovince-lookup","content":" It may be that your instance needs to search multiple states. By default searches will be biased towards the local number state (unless it's tollfree). To enable province lookup set the $province_lookup, variable to true in the config.php file. "},{"title":"Voice Recognition Optimizations","type":0,"sectionRef":"#","url":"general/voice-recognition-optimizations","content":"Voice Recognition Optimizations It's possible to set the expected spoken language, for recognition by setting the following variable in config.php to the culture variant. The default is en-US, which is US English. Use the this chart to find the code of your preference https://www.twilio.com/docs/api/twiml/gather#languagetags. static $gather_language = &quot;en-US&quot;; Copy You can also set some expected words or hints, to help the voice recognition engine along. Use the setting by separating words with commas. You can use phrases as well. Each hint may not be more than 100 characters (including spaces). You can use up to 500 hints. static $gather_hints = &quot;&quot;; Copy New Yap 3.x Voice recognition for input gathering is turned on by default, to turn it off you can do the following. static $speech_gathering = false; Copy","keywords":""},{"title":"Specialized Routing","type":0,"sectionRef":"#","url":"helpline/specialized-routing","content":"","keywords":""},{"title":"Gender Routing​","type":1,"pageTitle":"Specialized Routing","url":"helpline/specialized-routing#gender-routing","content":"New Yap 3.0 Gender routing allows you to specify volunteers as Male or Female to enable callers to speak with volunteers of their gender selection. This setting is configured from within each service body call handling. "},{"title":"Shadow (Volunteer Training)​","type":1,"pageTitle":"Specialized Routing","url":"helpline/specialized-routing#shadow-volunteer-training","content":"New Yap 3.0 This feature allow you to set up volunteers as trainees or trainers. If a volunteer is set as a &quot;trainee&quot; and they connected to a helpline call, a &quot;trainer&quot; (or multiple trainers), will all be called and added to volunteer call to listen in. The trainer cannot speak, only listen. This feature is configured in the administrative portal under each specific volunteer. "},{"title":"Language​","type":1,"pageTitle":"Specialized Routing","url":"helpline/specialized-routing#language","content":"New Yap 3.0 You can tag volunteers to zero or more languages (English is the default). Be sure to set the list of languages you want your callers to be prompted with here. "},{"title":"Setup","type":0,"sectionRef":"#","url":"general/setup","content":"Setup This will require that you have an SSL certificate installed on your webserver to transit a secure connection. This is required by Twilio. Create a new virtual application or add the yap code to an existing folder. You can always find the latest stable version here (be sure download the yap-x-x-x.zip file and not the source code): https://github.com/bmlt-enabled/yap/releases/latest. You can also try out or help test the latest bleeding edge features by installing one of the unreleased versions. The newest version would always be the highest numbered build. Once the application is configured you will need to customize the config.php file. There are several settings there that are documented in that file. There are a number of different ways to utilize the yap platform. You will need to (config.php) enter $twilio_account_sid and $twilio_auth_token. You can find this on your account dashboard. You can also use a different Twilio account using the admin portal under &quot;Service Bodies&quot;. Keep in mind that if a key or keys are set at any parent above, all child service bodies will inherit that key. In order to use a key, just specify override_service_body_id in your webhook with the applicable id. You will need to ensure that the following config.php parameters are set. They should be a service body admin that will be responsible for reading and writing data back to your BMLT. This will not work with the &quot;Server Administrator&quot; account. The user should be at the highest level of access in your BMLT hierarchy that you require access to. static $bmlt_username = &quot;&quot;; static $bmlt_password = &quot;&quot;; Copy Be sure to get a Google Maps API key. Specify this in config.php as the value for $google_maps_api_key. Make sure you have &quot;Google Maps Geocoding API&quot; and &quot;Google Maps Time Zone API&quot; enabled on your credentials. This key must be separate from your BMLT key with no server restrictions, this is safe because yap never passes the key client side. You can login into your Google API console here: https://console.cloud.google.com/apis/. This article may be useful https://bmlt.app/google-maps-api-keys-and-geolocation-issues/. Try testing that your application actually is functioning properly by opening a browser http://example.com/index.php. You will need to set up a Twilio account, and do the following. Purchase a phone number (typically you would buy one for your locale, tollfree is pretty much unnecessary these days). Configure that number to point to a Webook. It would be something like https://example.com/index.php. Version 3.x You will need to set up a new MySQL database. Be sure to set up backups on your database as well. Your hosting provider may cover this more. Once you've done that, set the following in your config.php. static $mysql_hostname = &quot;&quot;; static $mysql_username = &quot;&quot;; static $mysql_password = &quot;&quot;; static $mysql_database = &quot;&quot;; Copy You can test whether or not you are properly configured by going to https://example.com/upgrade-advisor.php. This will also run MySQL scripts to initialize/update your database. Make a call to your number and try it out. If there is a problem the debugger in the Twilio console will let you know why. Most likely you did not setup your config.php file correctly.","keywords":""},{"title":"Adding Location Text","type":0,"sectionRef":"#","url":"meeting-search/adding-location-text","content":"","keywords":""},{"title":"Adding Location Text​","type":1,"pageTitle":"Adding Location Text","url":"meeting-search/adding-location-text#adding-location-text","content":" New Yap 3.0This feature enables you to include the name of the meeting location in search results, by default it is disabled. If you want to enable this feature add the following to your config.php file. static $include_location_text = true; Copy "},{"title":"Adding Map Links","type":0,"sectionRef":"#","url":"meeting-search/adding-map-links","content":"","keywords":""},{"title":"Adding Map Links​","type":1,"pageTitle":"Adding Map Links","url":"meeting-search/adding-map-links#adding-map-links","content":" Some older handsets are not capable of rendering maps links. If you want to enable this feature add the following to your config.php file. static $include_map_link = true; Copy "},{"title":"Grace Period","type":0,"sectionRef":"#","url":"meeting-search/grace-period","content":"","keywords":""},{"title":"Grace Period​","type":1,"pageTitle":"Grace Period","url":"meeting-search/grace-period#grace-period","content":" This is so that yap still returns results for meetings that have already started. By default a 15 minute grace period will be applied. This can be adjusted by setting $grace_minutes in your config.php. static $grace_minutes = 10; Copy This would set the grace period to ten (10) minutes. "},{"title":"Ignoring Certain Formats","type":0,"sectionRef":"#","url":"meeting-search/ignoring-certain-formats","content":"","keywords":""},{"title":"Ignoring Certain Formats​","type":1,"pageTitle":"Ignoring Certain Formats","url":"meeting-search/ignoring-certain-formats#ignoring-certain-formats","content":" In some cases you might want to ignore a specific format. Add the following setting with the formats you want to exclude. Separate each with a comma. static $ignore_formats = &quot;ASM&quot;; Copy "},{"title":"Custom Query","type":0,"sectionRef":"#","url":"meeting-search/custom-query","content":"","keywords":""},{"title":"Custom Query​","type":1,"pageTitle":"Custom Query","url":"meeting-search/custom-query#custom-query","content":" In some cases you may want use a custom BMLT query. For example, if you have a small service body you may want to ignore the day of the week concept that is the default behavior in searches. You can do this with the setting custom_query. This setting also supports the use of some magic variables. For example say you want to always use the service body id for making queries, you could create the settings as follows: static $custom_query=&quot;&amp;services[]={SETTING_SERVICE_BODY_ID}&quot; Because there is a setting called service_body_id already and assuming you had overridden it, meeting searches will now send a query to the BMLT and return accordingly. You could have also hardcoded it if you wanted. Like any other variable, you can set this on the querystring as a session wide override. In some cases you may need to combine this with the result_count_max to increase the limit of how many results are returned. You may also need to use sms_ask, as many results could be returned. There are a couple of other stock magic variables. {DAY} - will use the day of today / tomorrow.{LATITUDE} - the latitude of the lookup.{LONGITUDE} - the longitude of the lookup. If you do not have {LATITUDE} or {LONGITUDE} in your custom query, it will automatically skip the location gathering aspects of the meeting search menus and go directly to returning results. "},{"title":"Disabling Postal Code Gathering","type":0,"sectionRef":"#","url":"meeting-search/disabling-postal-code-gathering","content":"","keywords":""},{"title":"Disable Postal Code Gathering​","type":1,"pageTitle":"Disabling Postal Code Gathering","url":"meeting-search/disabling-postal-code-gathering#disable-postal-code-gathering","content":" To disable postal code lookups set your config as follows: static $disable_postal_code_gather = true; Copy "},{"title":"Meeting Search Radius","type":0,"sectionRef":"#","url":"meeting-search/meeting-search-radius","content":"","keywords":""},{"title":"Meeting Search Radius​","type":1,"pageTitle":"Meeting Search Radius","url":"meeting-search/meeting-search-radius#meeting-search-radius","content":" Change the default meeting search radius, this can be in miles or a negative number which would set the radius at the first n results. You can change this in your config.php with the following: static $meeting_search_radius = 30; Copy This would set the radius to a maximum of 30 miles. static $meeting_search_radius = -50; Copy This would set the radius at the first 50 results and is the default. More information on how the BMLT uses search radius is here: https://bmlt.app/how-auto-radius-works/ "},{"title":"Results Counts Maximums","type":0,"sectionRef":"#","url":"meeting-search/results-counts-maximums","content":"","keywords":""},{"title":"Results Counts Maximums​","type":1,"pageTitle":"Results Counts Maximums","url":"meeting-search/results-counts-maximums#results-counts-maximums","content":" The default number of meeting results is 5. You can change this in your config.php with the following: static $result_count_max = 10; Copy This would set to a maximum of ten (10) results. "},{"title":"Post Call Options","type":0,"sectionRef":"#","url":"meeting-search/post-call-options","content":"","keywords":""},{"title":"Making SMS results for voice calls optional​","type":1,"pageTitle":"Post Call Options","url":"meeting-search/post-call-options#making-sms-results-for-voice-calls-optional","content":"The default of the system is to send an SMS after each voice meeting result. As an option to you audience you can add the following parameter to your config.php file. static $sms_ask = true; Copy By setting this, a prompt will be played at the end of the results, asking if they would like the results texted to them. If they do not respond the call will automatically hang up in 10 seconds. "},{"title":"Infinite Searches​","type":1,"pageTitle":"Post Call Options","url":"meeting-search/post-call-options#infinite-searches","content":"You can provide an option to allow someone to search again. Just set: static $infinite_searching = true; Copy "},{"title":"Mobile Check","type":0,"sectionRef":"#","url":"meeting-search/mobile-check","content":"","keywords":""},{"title":"Mobile Check​","type":1,"pageTitle":"Mobile Check","url":"meeting-search/mobile-check#mobile-check","content":" You can configure the SMS results to check if the device is mobile and not a landline or voip before sending. If not a mobile device SMS will not be sent. Set your configuration to have static $mobile_check = true; Copy "},{"title":"SMS Gateway","type":0,"sectionRef":"#","url":"meeting-search/sms-gateway","content":"","keywords":""},{"title":"SMS Gateway​","type":1,"pageTitle":"SMS Gateway","url":"meeting-search/sms-gateway#sms-gateway","content":" In order to use SMS to get a list of meetings you will configure Messaging to point to Webook sms-gateway.php. Then you can send a zip code, county or city to your phone number and get back a response. "},{"title":"SMS Summary Page","type":0,"sectionRef":"#","url":"meeting-search/sms-summary-page","content":"","keywords":""},{"title":"SMS Summary Page​","type":1,"pageTitle":"SMS Summary Page","url":"meeting-search/sms-summary-page#sms-summary-page","content":" You can configure the SMS results as a summary page link. Set your configuration to have static $sms_summary_page = true; Copy "},{"title":"Sorting Results","type":0,"sectionRef":"#","url":"meeting-search/sorting-results","content":"","keywords":""},{"title":"Sorting Results​","type":1,"pageTitle":"Sorting Results","url":"meeting-search/sorting-results#sorting-results","content":" By default the results will be sorted starting with today and then moving on to the next result. If latitude and longitude are not used in the meeting query, the first meeting latitude and longitude will be the assumed timezone. If you wanted to hardcode the sorting to start with another day you could use say for Wednesday use static $meeting_result_sort = 4;. Or you can keep a more natural flow by setting it to 1 which would sort Sunday to Saturday. "}]